version: '3.9'

services:
  agent: # All
    depends_on:
      gateway:
        condition: service_healthy
    image: grafana/agent:v0.37.2
    volumes:
      - ../exporters/grafana-agent/agent-flow:/etc/agent-config
      - /var/run/docker.sock:/var/run/docker.sock
    entrypoint:
      - /bin/grafana-agent
      - run
      - /etc/agent-config/
      - --server.http.listen-addr=0.0.0.0:12345
      - --cluster.enabled=true
      - --cluster.join-addresses=grafana-agent-cluster:12345
      - --disable-reporting=true
    environment:
      - AGENT_MODE=flow
      - AGENT_CONFIG_FOLDER=/etc/agent-config
    healthcheck:
      disable: true
    ports:
      - "12345"
    # scale up support
    deploy:
      replicas: 2
    networks:
      default:
        aliases:
          - grafana-agent-cluster

  minio: # All
    image: minio/minio:RELEASE.2023-11-01T01-57-10Z
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/mimir-data /data/mimir-rules /data/mimir-alertmanager && \
        mkdir -p /data/loki-data /data/loki-rules && \
        mkdir -p /data/tempo-data  && \
        mkdir -p /data/pyroscope-data && \
        minio server /data --console-address ':9001'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin_password
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
      # - MINIO_PROMETHEUS_URL="http://gateway:8500/prometheus"
      # - MINIO_PROMETHEUS_JOB_ID="integrations/minio"
    volumes:
      - ../Data:/data:delegated
    healthcheck:
      test: ["CMD", "curl","-f","http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "9001:9001"

  gateway-read: # All
    depends_on:
      mimir-frontend:
        condition: service_healthy
      loki-frontend:
        condition: service_healthy
    image: &nginx nginxinc/nginx-unprivileged:1.25-alpine
    volumes:
      - ../configs/nginx/read:/etc/nginx/templates
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - QUERY_FRONTEND_HOST=mimir-frontend
      - LOKI_QUERY_FRONTEND_HOST=loki-frontend
      - TEMPO_QUERY_FRONTEND_HOST=tempo-frontend
      - PYRO_QUERY_FRONTEND_HOST=pyro-frontend
      - LOKI_QUERY_SCHEDULER_HOST=loki-scheduler
      - LOKI_QUERIER_HOST=loki-querier      
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8500/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8080" # Mimir
      - "3100" # Loki
      - "3200" # Tempo
      - "4317" # Tempo
      - "4040" # Pyro
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin

  gateway-write: # All
    depends_on:
      mimir-write:
        condition: service_healthy
      mimir-backend:
        condition: service_healthy
    image: *nginx
    volumes:
      - ../configs/nginx/write:/etc/nginx/templates
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - DISTRIBUTOR_HOST=mimir-write
      - ALERT_MANAGER_HOST=mimir-backend
      - RULER_HOST=mimir-backend
      - COMPACTOR_HOST=mimir-backend
      - LOKI_DISTRIBUTOR_HOST=loki-write
      - LOKI_INGESTER_HOST=loki-write
      - LOKI_RULER_HOST=loki-backend
      - LOKI_COMPACTOR_HOST=loki-backend
      - TEMPO_DISTRIBUTOR_HOST=tempo-distributor
      - TEMPO_INGESTER_HOST=tempo-ingester
      - TEMPO_COMPACTOR_HOST=tempo-compactor
      - PYRO_DISTRIBUTOR_HOST=pyro-distributor
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8500/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8501" # Mimir
      - "3101" # Loki
      - "3201" # Tempo
      - "4319" # Tempo
      - "4041" # Pyro

  grafana: #All
    image: grafana/grafana:10.2.0
    hostname: grafana
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - /mnt/Media/Monitoring/Configs/grafana/grafana.ini:/etc/grafana-config/grafana.ini # All
      - /mnt/Media/Monitoring/Configs/grafana/dashboards:/var/lib/grafana/dashboards # All
      - /mnt/Media/Monitoring/Configs/grafana/provisioning:/etc/grafana/provisioning # All
      - /mnt/Media/Monitoring/Configs/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml # Metrics
    environment:
      - GF_LOG_LEVEL=error # All
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password} # All
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor # Tempo
      - GF_TRACING_OPENTELEMETRY_OTLP_ADDRESS=agent:4317 # Tempo
      - GF_TRACING_OPENTELEMETRY_CUSTOM_ATTRIBUTES=cluster:docker-compose,namespace:monitoring # Tempo
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph # Pyro
      - GF_DIAGNOSTICS_PROFILING_ENABLED=true # Pyro
      - GF_DIAGNOSTICS_PROFILING_ADDR=0.0.0.0 # Pyro
      - GF_DIAGNOSTICS_PROFILING_PORT=6060 # Pyro
    ports:
      - "3000:3000"

  distributor: # Mimir
    depends_on:
      ingester:
        condition: service_started
    image: &mimirImage grafana/mimir:2.10.3
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=distributor
     # - -log.level=warn
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - mimir-memberlist

  overrides-exporter: # Mimir
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=overrides-exporter

  querier: # Mimir
    depends_on:
      query-scheduler:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=querier
      - -log.level=error
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - mimir-memberlist

  query-frontend: # Mimir
    depends_on:
      query-scheduler:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=query-frontend
      - -log.level=error

  query-scheduler: # Mimir
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=query-scheduler
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1

  ruler: # Mimir
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=ruler
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      default:
        aliases:
          - mimir-memberlist

  alertmanager: # Mimir
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=alertmanager
    networks:
      default:
        aliases:
          - mimir-memberlist

  compactor: # Mimir
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=compactor
    networks:
      default:
        aliases:
          - mimir-memberlist

  ingester: # Mimir
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=ingester
    ports:
      - "8080"
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - mimir-memberlist

  store-gateway: # Mimir
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    volumes:
      - ../configs/mimir/mimir-metrics.yaml:/etc/mimir.yaml
      - ../configs/mimir:/etc/mimir
    command:
      - -config.file=/etc/mimir.yaml
      - -target=store-gateway
    networks:
      default:
        aliases:
          - mimir-memberlist

  distributor: # Loki
    depends_on:
      ingester:
        condition: service_started
    image: &lokiImage grafana/loki:2.9.2
    volumes:
      - ../configs/loki-logs.yaml:/etc/loki.yaml
    command:
      - -config.file=/etc/loki.yaml
      - -target=distributor
     # - -log.level=warn
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - loki-memberlist

  ingester: # Loki
    depends_on:
      minio:
        condition: service_healthy
    image: *lokiImage
    volumes:
      - ../configs/loki-logs.yaml:/etc/loki.yaml
    command:
      - -config.file=/etc/loki.yaml
      - -target=ingester
    ports:
      - "3100"
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - loki-memberlist

  query-frontend: # Loki
    depends_on:
      query-scheduler:
        condition: service_started
    image: *lokiImage
    volumes:
      - ../configs/loki-logs.yaml:/etc/loki.yaml
    command:
      - -config.file=/etc/loki.yaml
      - -target=query-frontend

  query-scheduler: # Loki
    image: *lokiImage
    volumes:
      - ../configs/loki-logs.yaml:/etc/loki.yaml
    command:
      - -config.file=/etc/loki.yaml
      - -target=query-scheduler
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - loki-memberlist

  querier: # Loki
    depends_on:
      query-scheduler:
        condition: service_started
    image: *lokiImage
    volumes:
      - ../configs/loki-logs.yaml:/etc/loki.yaml
    command:
      - -config.file=/etc/loki.yaml
      - -target=querier

  ruler: # Loki
    depends_on:
      minio:
        condition: service_healthy
    image: *lokiImage
    volumes:
      - ../configs/loki-logs.yaml:/etc/loki.yaml
    command:
      - -config.file=/etc/loki.yaml
      - -target=ruler
    networks:
      default:
        aliases:
          - loki-memberlist

  compactor: # Loki
    image: *lokiImage
    volumes:
      - ../configs/loki-logs.yaml:/etc/loki.yaml
    command:
      - -config.file=/etc/loki.yaml
      - -target=compactor
    networks:
      default:
        aliases:
          - loki-memberlist

  tempo-distributor: # Tempo
    depends_on:
      tempo-ingester:
        condition: service_started
    image: &tempoImage grafana/tempo:2.2.3
    volumes:
      - ../configs/tempo/tempo-traces.yaml:/etc/tempo.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=distributor
      # - -log.level=warn
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3200/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  tempo-ingester: # Tempo
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    volumes:
      - ../configs/tempo/tempo-traces.yaml:/etc/tempo.yaml
    ports:
      - "3200"
    command:
      - -config.file=/etc/tempo.yaml
      - -target=ingester
      - -log.level=warn
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - tempo-memberlist

  tempo-frontend: # Tempo
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    volumes:
      - ../configs/tempo/tempo-traces.yaml:/etc/tempo.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=query-frontend
      - -log.level=warn

  tempo-querier: # Tempo
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    volumes:
      - ../configs/tempo/tempo-traces.yaml:/etc/tempo.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=querier
      - -log.level=warn

  tempo-compactor: # Tempo
    depends_on:
      minio:
        condition: service_healthy
    image: *tempoImage
    volumes:
      - ../configs/tempo/tempo-traces.yaml:/etc/tempo.yaml
    command:
      - -config.file=/etc/tempo.yaml
      - -target=compactor
      - -log.level=error

  pyro-distributor: # Pyro
    depends_on:
      pyro-ingester:
        condition: service_started
    image: &pyroscopeImage grafana/pyroscope:1.1.5
    volumes:
      - ../configs/pyro/pyro-profiles.yaml:/etc/config.yaml
    ports:
      - "4040"
    command:
      - -config.file=/etc/config.yaml
      - -target=distributor
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      # - -runtime-config.file=/etc/overrides/overrides.yaml
      # - -log.level=warn
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:4040/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  pyro-ingester: # Pyro
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../configs/pyro/pyro-profiles.yaml:/etc/config.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=ingester
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=warn
    deploy:
      replicas: 1
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  pyro-frontend: # Pyro
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../configs/pyro/pyro-profiles.yaml:/etc/config.yaml
    ports:
      - "4040"
    command:
      - -config.file=/etc/config.yaml
      - -target=query-frontend
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=warn
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  pyro-querier: # Pyro
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../configs/pyro/pyro-profiles.yaml:/etc/config.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=querier
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=warn
    networks:
      default:
        aliases:
          - pyroscope-memberlist
  
  pyro-scheduler: # Pyro
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../configs/pyro/pyro-profiles.yaml:/etc/config.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=query-scheduler
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=error
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  pyro-store-gateway: # Pyro
    depends_on:
      minio:
        condition: service_healthy
    image: *pyroscopeImage
    volumes:
      - ../configs/pyro/pyro-profiles.yaml:/etc/config.yaml
    command:
      - -config.file=/etc/config.yaml
      - -target=store-gateway
      - -memberlist.cluster-label=profiles-system
      - -memberlist.join=pyroscope-memberlist:7946
      - -log.level=error
    networks:
      default:
        aliases:
          - pyroscope-memberlist

  opentelemetry-collector: #All
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ../exporters/opentelemetry/otel-config.yaml:/etc/otel-config.yaml
    command:
      - "--config=/etc/otel-config.yaml"
  load-rules: #All 
    depends_on:
      gateway:
        condition: service_started
    image: grafana/mimirtool:2.10.3
    volumes:
      - ../../../monitoring-mixins/mimir-mixin/deploy/rules.yaml:/mimir-mixin/rules.yaml
      - ../../../monitoring-mixins/mimir-mixin/deploy/alerts.yaml:/mimir-mixin/alerts.yaml
      - ../../../monitoring-mixins/loki-mixin/deploy/rules.yaml:/loki-mixin/rules.yaml
      - ../../../monitoring-mixins/loki-mixin/deploy/alerts.yaml:/loki-mixin/alerts.yaml
      - ../../../monitoring-mixins/tempo-mixin/deploy/rules.yaml:/tempo-mixin/rules.yaml
      - ../../../monitoring-mixins/tempo-mixin/deploy/alerts.yaml:/tempo-mixin/alerts.yaml
    environment:
      - MIMIR_ADDRESS=http://gateway:8080
      - MIMIR_TENANT_ID=anonymous
    command: >-
      rules load /mimir-mixin/rules.yaml /mimir-mixin/alerts.yaml /loki-mixin/rules.yaml /loki-mixin/alerts.yaml /tempo-mixin/rules.yaml /tempo-mixin/alerts.yaml 



  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yml
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin