/********************************************
 * ARGUMENTS
 ********************************************/
argument "stack_name" { }

argument "token" { }

/********************************************
 * EXPORTS
 ********************************************/

export "metrics_receiver" {
	value = prometheus.remote_write.default.receiver
}

export "logs_receiver" {
	value = loki.write.default.receiver
}

export "traces_receiver" {
	value = otelcol.exporter.otlp.default.input
}

export "profiles_receiver" {
	value = pyroscope.write.default.receiver
}

export "stack_information" {
	value = json_decode(remote.http.config_file.content)
}

/********************************************
 * External information
 ********************************************/

remote.http "config_file" {
	url = "https://grafana.com/api/instances/" + argument.stack_name.value

	client {
		bearer_token = argument.token.value
	}
	poll_frequency = "24h"
}

/********************************************
 * Endpoints
 ********************************************/

// Metrics
prometheus.remote_write "default" {
	endpoint {
		url = json_decode(remote.http.config_file.content)["hmInstancePromUrl"] + "/api/prom/push"

		basic_auth {
			username = json_decode(remote.http.config_file.content)["hmInstancePromId"]
			password = argument.token.value
		}
	}
}

// Logs
loki.write "default" {
	endpoint {
		url = json_decode(remote.http.config_file.content)["hlInstanceUrl"] + "/loki/api/v1/push"

		basic_auth {
			username = json_decode(remote.http.config_file.content)["hlInstanceId"]
			password = argument.token.value
		}
	}
}

// Traces
otelcol.auth.basic "default" {
	username = json_decode(remote.http.config_file.content)["htInstanceId"]
	password = argument.token.value
}

otelcol.exporter.otlp "default" {
	client {
		endpoint = json_decode(remote.http.config_file.content)["htInstanceUrl"] + ":443"
		auth     = otelcol.auth.basic.default.handler
	}
}

// Profiles
pyroscope.write "default" {
	endpoint {
		url = json_decode(remote.http.config_file.content)["hpInstanceUrl"]

		basic_auth {
			username = json_decode(remote.http.config_file.content)["hpInstanceId"]
			password = argument.token.value
		}
	}
}
